<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="rhoa">
	<!-- INCLUDE -->
	<xacro:include filename="$(find rhoa_sim)/robots/macros/inertia.xacro" />

    <!-- FICHIER MACRO -->
    <!-- Ce fichier definit des macros pour instancier un capteur -->

    <!-- Exemple d'utilisation:
        <xacro:m_proximity_sensor prefix="front"  offset="${front_proximity_sensor_offset}" rpy="${front_proximity_sensor_rpy}"/>
    -->

    <!-- Pour chaque macro que vous utilisez, n'oubliez pas de copier:
            * Une fois les parametres generaux
                Ex:
	                <xacro:property name="chassis_mesh"     value="package://rhoa_sim/meshes/chassis.dae" />

            * Pour chaque instanciation de la macro, les parametres prennant un $PREFIX et remplacer $PREFIX par la valeur desiree
                <xacro:property name="$PREFIX_camera_offset_x"  value="-0.044885" /> // Puis remplacer $PREFIX par front, par exemple
    -->

  <!-- ==================================================================== -->
  <!-- ====================  PROXIMITY SENSOR MACRO  ====================== -->
  <!-- ==================================================================== -->

    <!-- NOTE:-->
    <!-- Pour les parametres, n'oubliez pas de remplacer $PREFIX par le prefix specifie lors de l'instanciation de la macro -->

    <!-- PARAMETRES-->

    <!-- A COPIER UNE FOIS DANS LE FICHIER -->
    <!--
	<xacro:property name="proximity_sensor_mesh"              value="package://rhoa_sim/meshes/sensor.dae" />
	<xacro:property name="proximity_sensor_material"          value="orange" />
	<xacro:property name="proximity_sensor_mass"              value="0.1" />
	<xacro:property name="proximity_sensor_size_x"            value="0.03" />
	<xacro:property name="proximity_sensor_size_y"            value="0.03" />
	<xacro:property name="proximity_sensor_size_z"            value="0.03" />
	<xacro:property name="proximity_sensor_optic_offset"      value="0.014 0 0.014971" />

	<xacro:property name="proximity_sensor_visualize"         value="true" />
	<xacro:property name="proximity_sensor_update_rate"       value="40" />
	<xacro:property name="proximity_sensor_scan_sample"       value="40" />
	<xacro:property name="proximity_sensor_scan_resolution"   value="1" />
	<xacro:property name="proximity_sensor_scan_min_angle"    value="0.00872665" />
	<xacro:property name="proximity_sensor_scan_max_angle"    value="-0.00872665" />
	<xacro:property name="proximity_sensor_range_min"         value="0.06" />
	<xacro:property name="proximity_sensor_range_max"         value="0.15" />
	<xacro:property name="proximity_sensor_range_resolution"  value="0.01" />
	<xacro:property name="proximity_sensor_noise_type"        value="gaussian" />
	<xacro:property name="proximity_sensor_noise_mean"        value="0.0" />
	<xacro:property name="proximity_sensor_noise_stddev"      value="0.01" />
	<xacro:property name="proximity_sensor_topic_name"        value="proximity_sensor" />
	<xacro:property name="proximity_sensor_noise_stddev"      value="0.01" />
    -->

    <!-- A COPIER POUR CHAQUE INSTACIATION, en remplacant $PREFIX par des valeurs differentes pour chaque instanciation(Par exemple: front, left, ...) -->
    <!--
	<xacro:property name="$PREFIX_proximity_sensor_offset"      value="0.16265 0.0 0.16" />
	<xacro:property name="$PREFIX_proximity_sensor_rpy"         value="0 0 0" />
    -->

	<xacro:macro name="m_proximity_sensor" params="prefix offset rpy">
		<link name="${prefix}_proximity_sensor_anchor" />
		<link name="${prefix}_proximity_sensor">
			<visual>
				<geometry>
					<mesh filename="${proximity_sensor_mesh}" />
				</geometry>
				<material name="${proximity_sensor_material}" />
			</visual>
			<inertial>
				<origin xyz="0 0 0" rpy="0 0 0" />
				<mass value="${proximity_sensor_mass}" />
				<xacro:box_inertia m="${proximity_sensor_mass}" x="${proximity_sensor_size_x}"  y="${proximity_sensor_size_y}" z="${proximity_sensor_size_z}"/>
			</inertial>
		</link>
		<joint name="${prefix}_proximity_sensor_fixation" type="fixed">
			<parent link="chassis" />
			<child link="${prefix}_proximity_sensor" />
			<origin rpy="${rpy}" xyz="${offset}"/>
			<axis xyz="0 0 0" />
		</joint>
		<joint name="${prefix}_proximity_sensor_anchor_fixation" type="fixed">
			<parent link="${prefix}_proximity_sensor" />
			<child link="${prefix}_proximity_sensor_anchor" />
			<origin rpy="0 0 0" xyz="${proximity_sensor_optic_offset}"/>
			<axis xyz="0 0 0" />
		</joint>
		<gazebo reference="${prefix}_proximity_sensor_anchor">
			<sensor type="ray" name="${prefix}_proximity_sensor">
				<visualize>${proximity_sensor_visualize}</visualize>
				<update_rate>${proximity_sensor_update_rate}</update_rate>
				<ray>
					<scan>
						<horizontal>
							<samples>${proximity_sensor_scan_sample}</samples>
							<resolution>${proximity_sensor_scan_resolution}</resolution>
							<min_angle>${proximity_sensor_scan_min_angle}</min_angle>
							<max_angle>${proximity_sensor_scan_max_angle}</max_angle>
						</horizontal>
					</scan>
					<range>
						<min>${proximity_sensor_range_min}</min>
						<max>${proximity_sensor_range_max}</max>
						<resolution>${proximity_sensor_range_resolution}</resolution>
					</range>
					<noise>
						<type>${proximity_sensor_noise_type}</type>
						<mean>${proximity_sensor_noise_mean}</mean>
						<stddev>${proximity_sensor_noise_stddev}</stddev>
					</noise>
				</ray>
				<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
                    <topicName>${proximity_sensor_topic_name}/${prefix}</topicName>
					<frameName>${prefix}_proximity_sensor</frameName>
				</plugin>
			</sensor>
		</gazebo>
		<gazebo reference="${prefix}_proximity_sensor">
			<material>Gazebo/Orange</material>
		</gazebo>
	</xacro:macro>

</robot>
